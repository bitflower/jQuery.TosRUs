(function (b) { var a = "tosrus", j = "tos", i = "2.1.2"; if (b[a]) { return } var h = {}, g = {}, e = {}, d = {}, c = {}; b[a] = function (k, m, l) { this.$node = k; this.opts = m; this.conf = l; this.vars = {}; this.nodes = {}; this.slides = {}; this._init(); return this }; b[a].prototype = { _init: function () { var k = this; this._complementOptions(); this.vars.fixed = (this.opts.wrapper.target == "window"); this.nodes.$wrpr = b('<div class="' + h.wrapper + '" />'); this.nodes.$wrpr.addClass(this.vars.fixed ? h.fixed : h.inline).addClass(h("fx-" + this.opts.effect)).addClass(h(this.opts.slides.scale)).addClass(this.opts.wrapper.classes); this.nodes.$wrpr.on(e.open + " " + e.close + " " + e.prev + " " + e.next + " " + e.slideTo, function (m) { arguments = Array.prototype.slice.call(arguments); var m = arguments.shift(), l = m.type; m.stopPropagation(); if (typeof k[l] == "function") { k[l].apply(k, arguments) } }).on(e.opening + " " + e.closing + " " + e.sliding + " " + e.loading + " " + e.loaded, function (l) { l.stopPropagation() }).on(e.click, function (l) { l.stopPropagation(); k.nodes.$wrpr.toggleClass(h.hover) }); if (b.fn.hammer && b[a].support.touch) { this.nodes.$wrpr.hammer().on(e.pinch, function (l) { if (c.$body.hasClass(h.opened)) { l.gesture.preventDefault(); l.stopPropagation() } }) } this._finalSetup() }, open: function (k, m) { var l = this; if (!this.vars.opened) { if (this.vars.fixed) { c.scrollPosition = c.$wndw.scrollTop(); c.$body.addClass(h.opened); d.setViewportScale() } if (m) { this.nodes.$wrpr.addClass(h.opening).trigger(e.opening, [k, m]) } else { setTimeout(function () { l.nodes.$wrpr.addClass(h.opening).trigger(e.opening, [k, m]) }, 5) } this.nodes.$wrpr.addClass(h.hover).addClass(h.opened) } this.vars.opened = true; this._loadContents(); if (b.isNumeric(k)) { m = (m || !this.vars.opened); this.slideTo(k, m) } }, close: function (k) { if (this.vars.opened) { if (this.vars.fixed) { c.$body.removeClass(h.opened) } if (k) { this.nodes.$wrpr.removeClass(h.opened) } else { d.transitionend(this.nodes.$wrpr, function () { b(this).removeClass(h.opened) }, this.conf.transitionDuration) } this.nodes.$wrpr.removeClass(h.hover).removeClass(h.opening).trigger(e.closing, [this.slides.index, k]) } this.vars.opened = false }, prev: function (k, l) { if (!b.isNumeric(k)) { k = this.opts.slides.slide } this.slideTo(this.slides.index - k, l) }, next: function (k, l) { if (!b.isNumeric(k)) { k = this.opts.slides.slide } this.slideTo(this.slides.index + k, l) }, slideTo: function (n, q) { if (!this.vars.opened) { return false } if (!b.isNumeric(n)) { return false } var m = true; if (n < 0) { var l = (this.slides.index == 0); if (this.opts.infinite) { if (l) { n = this.slides.total - this.slides.visible } else { n = 0 } } else { n = 0; if (l) { m = false } } } if (n + this.slides.visible > this.slides.total) { var k = (this.slides.index + this.slides.visible >= this.slides.total); if (this.opts.infinite) { if (k) { n = 0 } else { n = this.slides.total - this.slides.visible } } else { n = this.slides.total - this.slides.visible; if (k) { m = false } } } this.slides.index = n; this._loadContents(); if (m) { var p = 0 - (this.slides.index * this.opts.slides.width) + this.opts.slides.offset; if (this.slides.widthPercentage) { p += "%" } if (q) { this.nodes.$sldr.addClass(h.noanimation); d.transitionend(this.nodes.$sldr, function () { b(this).removeClass(h.noanimation) }, 5) } for (var o in b[a].effects) { if (o == this.opts.effect) { b[a].effects[o].call(this, p, q); break } } this.nodes.$wrpr.trigger(e.sliding, [n, q]) } }, _initAnchors: function () { var l = this, n = b(); if (this.$node.is("a")) { for (var k in b[a].media) { n = n.add(this.$node.filter(function () { return b[a].media[k].filterAnchors.call(l, b(this).attr("href")) })) } } return n }, _initSlides: function () { this[this.$node.is("a") ? "_initSlidesFromAnchors" : "_initSlidesFromContent"](); return this.nodes.$sldr.children().css("width", this.opts.slides.width + (this.slides.widthPercentage ? "%" : "px")) }, _initSlidesFromAnchors: function () { var k = this; this.nodes.$anchors.each(function (l) { var m = b(this); var n = b('<div class="' + h.slide + " " + h.loading + '" />').data(g.anchor, m).appendTo(k.nodes.$sldr); m.data(g.slide, n).on(e.click, function (o) { o.preventDefault(); k.open(l) }) }) }, _initSlidesFromContent: function () { var k = this; this.$node.children().each(function () { var n = b(this); b('<div class="' + h.slide + '" />').append(n).appendTo(k.nodes.$sldr); for (var l in b[a].media) { if (b[a].media[l].filterSlides.call(k, n)) { b[a].media[l].initSlides.call(k, n); n.parent().addClass(h(l)); break } } }) }, _loadContents: function () { var k = this; switch (this.opts.slides.load) { case "all": this._loadContent(0, this.slides.total); break; case "visible": this._loadContent(this.slides.index, this.slides.index + this.slides.visible); break; case "near-visible": default: this._loadContent(this.slides.index, this.slides.index + this.slides.visible); setTimeout(function () { k._loadContent(k.slides.index - k.slides.visible, k.slides.index); k._loadContent(k.slides.index + k.slides.visible, k.slides.index + (k.slides.visible * 2)) }, this.conf.transitionDuration); break } }, _loadContent: function (m, k) { var l = this; this.nodes.$slides.slice(m, k).each(function () { var q = b(this), o = false; if (q.children().length == 0) { var p = q.data(g.anchor).attr("href"); for (var n in b[a].media) { if (b[a].media[n].filterAnchors.call(l, p)) { b[a].media[n].initAnchors.call(l, q, p); q.addClass(h(n)); break } } q.trigger(e.loading, [q.data(g.anchor)]) } }) }, _complementOptions: function () { if (typeof this.opts.wrapper.target == "undefined") { this.opts.wrapper.target = (this.$node.is("a")) ? "window" : this.$node } if (this.opts.wrapper.target != "window") { if (typeof this.opts.wrapper.target == "string") { this.opts.wrapper.target = b(this.opts.wrapper.target) } } this.opts.show = d.complBoolean(this.opts.show, this.opts.wrapper.target != "window"); if (b.isNumeric(this.opts.slides.width)) { this.slides.widthPercentage = false; this.opts.slides.visible = d.complNumber(this.opts.slides.visible, 1) } else { var k = (d.isPercentage(this.opts.slides.width)) ? d.getPercentage(this.opts.slides.width) : false; this.slides.widthPercentage = true; this.opts.slides.visible = d.complNumber(this.opts.slides.visible, (k) ? Math.floor(100 / k) : 1); this.opts.slides.width = (k) ? k : Math.ceil(100 * 100 / this.opts.slides.visible) / 100 } this.opts.slides.slide = d.complNumber(this.opts.slides.slide, this.opts.slides.visible); this.opts.slides.offset = (d.isPercentage(this.opts.slides.offset)) ? d.getPercentage(this.opts.slides.offset) : d.complNumber(this.opts.slides.offset, 0) }, _finalSetup: function () { this.nodes.$sldr = b('<div class="' + h.slider + '" />').appendTo(this.nodes.$wrpr); this.nodes.$anchors = this._initAnchors(); this.nodes.$slides = this._initSlides(); this.slides.total = this.nodes.$slides.length; this.slides.visible = this.opts.slides.visible; this.slides.index = 0; this.vars.opened = true; for (var k = 0; k < b[a].addons.length; k++) { if (b.isFunction(this["_addon_" + b[a].addons[k]])) { this["_addon_" + b[a].addons[k]]() } } for (var l = 0; l < b[a].ui.length; l++) { if (this.nodes.$wrpr.find("." + h[b[a].ui[l]]).length) { this.nodes.$wrpr.addClass(h("has-" + b[a].ui[l])) } } if (this.vars.fixed) { this.nodes.$wrpr.appendTo(c.$body); this.close(true) } else { this.nodes.$wrpr.appendTo(this.opts.wrapper.target); if (this.opts.show) { this.vars.opened = false; this.open(0, true) } else { this.close(true) } } }, reinit: function () { this.$node = b(this.$node.selector); this.nodes.$wrpr.empty(); this._finalSetup() } }; b.fn[a] = function (o, n, k, m) { if (!c.$wndw) { f() } o = b.extend(true, {}, b[a].defaults, o); o = b.extend(true, {}, o, b[a].support.touch ? k : n); m = b.extend(true, {}, b[a].configuration, m); var l = new b[a](this, o, m); this.data(a, l); return l }; b[a].support = { touch: "ontouchstart" in window.document }; b[a].defaults = { infinite: false, effect: "slide", wrapper: { classes: "" }, slides: { offset: 0, scale: "fit", load: "near-visible", visible: 1 } }; b[a].configuration = { transitionDuration: 400 }; b[a].debug = function (k) { }; b[a].deprecated = function (l, k) { if (typeof console != "undefined" && typeof console.warn != "undefined") { console.warn(a + ": " + l + " is deprecated, use " + k + " instead.") } }; b[a].effects = { slide: function (k) { this.nodes.$sldr.css("left", k) }, fade: function (k) { d.transitionend(this.nodes.$sldr, function () { b(this).css("left", k).css("opacity", 1) }, this.conf.transitionDuration); this.nodes.$sldr.css("opacity", 0) } }; b[a].version = i; b[a].media = {}; b[a].addons = []; b[a].ui = []; function f() { h = function (k) { return j + "-" + k }; g = function (k) { return j + "-" + k }; e = function (k) { return k + "." + j }; b.each([h, g, e], function (k, l) { l.add = function (n) { n = n.split(" "); for (var m in n) { l[n[m]] = l(n[m]) } } }); h.add("touch desktop scale-1 scale-2 scale-3 wrapper opened opening fixed inline hover slider slide loading noanimation fastanimation"); g.add("slide anchor"); e.add("open opening close closing prev next slideTo sliding click pinch scroll resize orientationchange load loading loaded transitionend webkitTransitionEnd"); d = { complObject: function (k, l) { if (!b.isPlainObject(k)) { k = l } return k }, complBoolean: function (k, l) { if (typeof k != "boolean") { k = l } return k }, complNumber: function (k, l) { if (!b.isNumeric(k)) { k = l } return k }, complString: function (k, l) { if (typeof k != "string") { k = l } return k }, isPercentage: function (k) { return (typeof k == "string" && k.slice(-1) == "%"); k = parseInt(k.slice(0, -1)); return !isNaN(k) }, getPercentage: function (k) { return parseInt(k.slice(0, -1)) }, resizeRatio: function (q, l, o, n, m) { var k = l.width(), p = l.height(); if (o && k > o) { k = o } if (n && p > n) { p = n } if (k / p < m) { p = k / m } else { k = p * m } q.width(k).height(p) }, transitionend: function (k, m, n) { var l = false, o = function () { if (!l) { m.call(k[0]) } l = true }; k.one(e.transitionend, o); k.one(e.webkitTransitionEnd, o); setTimeout(o, n * 1.1) }, setViewportScale: function () { if (c.viewportScale) { var k = c.viewportScale.getScale(); if (typeof k != "undefined") { k = 1 / k; c.$body.removeClass(h["scale-1"]).removeClass(h["scale-2"]).removeClass(h["scale-3"]).addClass(h["scale-" + Math.max(Math.min(Math.round(k), 3), 1)]) } } } }; c = { $wndw: b(window), $html: b("html"), $body: b("body"), scrollPosition: 0, viewportScale: null, viewportScaleInterval: null }; c.$body.addClass(b[a].support.touch ? h.touch : h.desktop); c.$wndw.on(e.scroll, function (k) { if (c.$body.hasClass(h.opened)) { window.scrollTo(0, c.scrollPosition); k.preventDefault(); k.stopPropagation(); k.stopImmediatePropagation() } }); if (!c.viewportScale && b[a].support.touch && typeof FlameViewportScale != "undefined") { c.viewportScale = new FlameViewportScale(); d.setViewportScale(); c.$wndw.on(e.orientationchange + " " + e.resize, function (k) { if (c.viewportScaleInterval) { clearTimeout(c.viewportScaleInterval); c.viewportScaleInterval = null } c.viewportScaleInterval = setTimeout(function () { d.setViewportScale() }, 500) }) } b[a]._c = h; b[a]._d = g; b[a]._e = e; b[a]._f = d; b[a]._g = c } })(jQuery);
/*	
 * jQuery Touch Optimized Sliders "R"Us
 * Images media
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (i) { var n = "tosrus", o = "image"; i[n].media[o] = { filterAnchors: function (n) { return i.inArray(n.toLowerCase().split(".").pop().split("?")[0], ["jpg", "jpe", "jpeg", "gif", "png"]) > -1 }, initAnchors: function (o, r) { i('<img border="0" />').on(i[n]._e.load, function (r) { r.stopPropagation(), o.removeClass(i[n]._c.loading).trigger(i[n]._e.loaded) }).appendTo(o).attr("src", r) }, filterSlides: function (i) { return i.is("img") }, initSlides: function () { } } }(jQuery);
/*	
 * jQuery Touch Optimized Sliders "R"Us
 * HTML media
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (i) { var n = "tosrus", e = "html"; i[n].media[e] = { filterAnchors: function (n) { return "#" == n.slice(0, 1) && i(n).is("div") }, initAnchors: function (e, t) { i('<div class="' + i[n]._c("html") + '" />').append(i(t)).appendTo(e), e.removeClass(i[n]._c.loading).trigger(i[n]._e.loaded) }, filterSlides: function (i) { return i.is("div") }, initSlides: function () { } } }(jQuery);
(function (c) { var b = "tosrus", f = "youtube"; var j = false, i, h, g, e, d; c[b].media[f] = { filterAnchors: function (k) { return (k.toLowerCase().indexOf("youtube.com/watch?v=") > -1) }, initAnchors: function (k, l) { var m = l; l = l.split("?v=")[1].split("&")[0]; if (this.opts[f].imageLink) { l = "http://img.youtube.com/vi/" + l + "/0.jpg"; c('<a href="' + m + '" class="' + c[b]._c("play") + '" target="_blank" />').appendTo(k); c('<img border="0" />').on(c[b]._e.load, function (n) { n.stopPropagation(); k.removeClass(c[b]._c.loading).trigger(c[b]._e.loaded) }).appendTo(k).attr("src", l) } else { c('<iframe src="http://www.youtube.com/embed/' + l + '" frameborder="0" allowfullscreen />').appendTo(k); a.call(this, k) } }, filterSlides: function (k) { if (k.is("iframe") && k.attr("src")) { return (k.attr("src").toLowerCase().indexOf("youtube.com/embed/") > -1) } return false }, initSlides: function (k) { a.call(this, k) } }; function a(n) { if (!j) { i = c[b]._c; h = c[b]._d; g = c[b]._e; e = c[b]._f; d = c[b]._g; h.add("ratio maxWidth maxHeight"); j = true } var o = this; var m = n.children(), l = n.data(c[b]._d.anchor) || c(); var q = l.data(h.ratio) || this.opts[f].ratio, r = l.data(h.maxWidth) || this.opts[f].maxWidth, s = l.data(h.maxHeight) || this.opts[f].maxHeight; n.removeClass(i.loading).trigger(g.loaded).on(g.loading, function (t) { e.resizeRatio(m, n, r, s, q) }); this.nodes.$wrpr.on(g.sliding, function (t) { k("pause") }).on(g.closing, function (t) { k("stop") }); d.$wndw.on(g.resize, function (t) { e.resizeRatio(m, n, r, s, q) }); function p() { var t = n.width(), u = n.height(); if (r && t > r) { t = r } if (s && u > s) { u = s } if (t / u < q) { u = t / q } else { t = u * q } m.width(t).height(u) } function k(t) { if (m.length) { m[0].contentWindow.postMessage('{ "event": "command", "func": "' + t + 'Video" }', "*") } } } c[b].defaults[f] = { ratio: 16 / 9, maxWidth: false, maxHeight: false, imageLink: c[b].support.touch } })(jQuery);
/*	
 * jQuery Touch Optimized Sliders "R"Us
 * Vimeo media
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (i) { function t(t) { function l(i) { m.length && m[0].contentWindow.postMessage('{ "method": "' + i + '" }', "*") } c || (o = i[s]._c, e = i[s]._d, n = i[s]._e, a = i[s]._f, r = i[s]._g, e.add("ratio maxWidth maxHeight"), c = !0); var m = t.children(), f = t.data(i[s]._d.anchor) || i(), h = f.data(e.ratio) || this.opts[d].ratio, u = f.data(e.maxWidth) || this.opts[d].maxWidth, g = f.data(e.maxHeight) || this.opts[d].maxHeight; t.removeClass(o.loading).trigger(n.loaded).on(n.loading, function () { a.resizeRatio(m, t, u, g, h) }), this.nodes.$wrpr.on(n.sliding, function () { l("pause") }).on(n.closing, function () { l("unload") }), r.$wndw.on(n.resize, function () { a.resizeRatio(m, t, u, g, h) }) } var o, e, n, a, r, s = "tosrus", d = "vimeo", c = !1; i[s].media[d] = { filterAnchors: function (i) { return i.toLowerCase().indexOf("vimeo.com/") > -1 }, initAnchors: function (o, e) { e = e.split("vimeo.com/")[1].split("?")[0] + "?api=1", i('<iframe src="http://player.vimeo.com/video/' + e + '" frameborder="0" allowfullscreen />').appendTo(o), t.call(this, o) }, filterSlides: function (i) { return i.is("iframe") && i.attr("src") ? i.attr("src").toLowerCase().indexOf("vimeo.com/video/") > -1 : !1 }, initSlides: function (i) { t.call(this, i) } }, i[s].defaults[d] = { ratio: 16 / 9, maxWidth: !1, maxHeight: !1 } }(jQuery);
(function (b) { var a = "tosrus", j = "buttons"; var f = false, h, g, e, d, c; b[a].prototype["_addon_" + j] = function () { if (!f) { h = b[a]._c; g = b[a]._d; e = b[a]._e; d = b[a]._f; c = b[a]._g; h.add("prev next close disabled"); f = true } var m = this, l = this.opts[j]; this.nodes.$prev = null; this.nodes.$next = null; this.nodes.$clse = null; if (typeof l == "boolean" || (typeof l == "string" && l == "inline")) { l = { prev: l, next: l } } if (typeof l.close == "undefined") { l.close = this.vars.fixed } l.prev = true; l.next = true; if (this.nodes.$slides.length < 2) { l.prev = false; l.next = false } b.each({ prev: "prev", next: "next", close: "clse", wrpr: "wrpr" }, function (n, o) { if (l[n]) { if (typeof l[n] == "string" && l[n] == "inline") { if (m.vars.fixed && n != "close" && n != "wrpr") { m.nodes.$slides.on(e.loading, function (r, q) { var p = k(n, " " + h.inline)[n == "prev" ? "prependTo" : "appendTo"](this); i(m.nodes.$wrpr, p, n, 1); if ((n == "prev" && b(this).is(":first-child")) || (n == "next" && b(this).is(":last-child"))) { p.addClass(h.disabled) } }) } } else { if (typeof l[n] == "string") { l[n] = b(l[n]) } m.nodes["$" + o] = (l[n] instanceof b) ? l[n] : k(n, "").appendTo(m.nodes.$wrpr); i(m.nodes.$wrpr, m.nodes["$" + o], n, null) } } }); if (!this.opts.infinite) { this.updateButtons(); this.nodes.$wrpr.on(e.sliding, function (o, n, p) { m.updateButtons() }) } }; function k(m, l) { return b('<a class="' + h[m] + "" + l + '" href="#"><span></span></a>') } function i(o, n, l, m) { n.on(e.click, function (p) { p.preventDefault(); p.stopPropagation(); o.trigger(e[l], [m]) }) } b[a].prototype.updateButtons = function () { if (this.nodes.$prev) { this.nodes.$prev[((this.slides.index < 1) ? "add" : "remove") + "Class"](h.disabled) } if (this.nodes.$next) { this.nodes.$next[((this.slides.index >= this.slides.total - this.slides.visible) ? "add" : "remove") + "Class"](h.disabled) } }; b[a].defaults[j] = { prev: !b[a].support.touch, next: !b[a].support.touch }; b[a].addons.push(j); b[a].ui.push("prev"); b[a].ui.push("next"); b[a].ui.push("close") })(jQuery);
/*	
 *	jQuery Touch Optimized Sliders "R"Us
 *	Caption addon
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (t) { var a, i, s, e, n, d = "tosrus", r = "caption", o = !1; t[d].prototype["_addon_" + r] = function () { o || (a = t[d]._c, i = t[d]._d, s = t[d]._e, e = t[d]._f, n = t[d]._g, a.add("caption uibg"), i.add("caption"), o = !0); var p = this, c = this.opts[r]; t.isArray(c) && t[d].deprecated('An array for the option "caption"', 'the option "caption.attributes"'), c.add && this.vars.fixed && ("string" == typeof c.target && (c.target = t(c.target)), c.target instanceof t ? this.nodes.$capt = c.target : (this.nodes.$capt = t('<div class="' + a.caption + '" />').appendTo(this.nodes.$wrpr), this.nodes.$uibg || (this.nodes.$uibg = t('<div class="' + a.uibg + '" />').prependTo(this.nodes.$wrpr))), c.attributes = c.attributes || [], this.nodes.$anchors.each(function () { var a = t(this), s = a.data(i.slide); s.data(i.caption, ""); for (var e = 0, n = c.attributes.length; n > e; e++) { var d = a.attr(c.attributes[e]); if (d && d.length) { s.data(i.caption, d); break } } }), this.nodes.$wrpr.on(s.sliding, function () { var t = p.nodes.$sldr.children().eq(p.slides.index).data(i.caption) || ""; p.nodes.$capt.text(t)[t.length > 0 ? "removeClass" : "addClass"](a.disabled) })) }, t[d].defaults[r] = { add: !1, target: null, attributes: ["title", "rel"] }, t[d].addons.push(r), t[d].ui.push("caption") }(jQuery);
(function (b) { var a = "tosrus", i = "pagination"; var f = false, h, g, e, d, c; b[a].prototype["_addon_" + i] = function () { if (!f) { h = b[a]._c; g = b[a]._d; e = b[a]._e; d = b[a]._f; c = b[a]._g; h.add("pagination selected uibg bullets thumbnails"); f = true } var k = this, j = this.opts[i]; if (typeof j == "boolean") { b[a].deprecated('A boolean for the option "pagination"', 'the option "pagination.add"') } if (typeof j == "string") { b[a].deprecated('A string for the option "pagination"', 'the option "pagination.target"') } if (j instanceof b) { b[a].deprecated('A jQuery object for the option "pagination"', 'the option "pagination.target"') } j.add = true; if (this.nodes.$slides.length < 2) { j.add = false } if (j.add) { if (typeof j.target == "string") { j.target = b(j.target) } if (j.target instanceof b) { this.nodes.$pagr = j.target } else { this.nodes.$pagr = b('<div class="' + h.pagination + " " + h[j.type] + '" />').appendTo(this.nodes.$wrpr); if (!this.nodes.$uibg) { this.nodes.$uibg = b('<div class="' + h.uibg + '" />').prependTo(this.nodes.$wrpr) } } if (typeof j.anchorBuilder != "function") { switch (j.type) { case "thumbnails": if (this.vars.fixed) { j.anchorBuilder = function (l) { return '<a href="#" style="background-image: url(' + b(this).data(g.anchor).attr("href") + ');"></a>' } } else { j.anchorBuilder = function (l) { return '<a href="#" style="background-image: url(' + b(this).find("img").attr("src") + ');"></a>' } } break; case "bullets": default: j.anchorBuilder = function (l) { return '<a href="#"></a>' }; break } } k.nodes.$pagr.empty(); this.nodes.$slides.each(function (l) { b(j.anchorBuilder.call(this, l + 1)).appendTo(k.nodes.$pagr).on(e.click, function (m) { m.preventDefault(); m.stopPropagation(); k.nodes.$wrpr.trigger(e.slideTo, [l]) }) }); this.updatePagination(); this.nodes.$wrpr.on(e.sliding, function (m, l, n) { k.updatePagination() }) } }; b[a].prototype.updatePagination = function () { if (this.nodes.$pagr) { this.nodes.$pagr.children().removeClass(h.selected).eq(this.slides.index).addClass(h.selected) } }; b[a].defaults[i] = { add: false, type: "bullets", target: null, anchorBuilder: null }; b[a].addons.push(i); b[a].ui.push("pagination"); b[a].ui.push("bullets"); b[a].ui.push("thumbnails") })(jQuery);
/*	
 *	jQuery Touch Optimized Sliders "R"Us
 *	Drag addon
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (e) { if (e.fn.hammer) { var t, s, r, n, i, a = "tosrus", o = "drag", d = !1; e[a].prototype["_addon_" + o] = function () { d || (t = e[a]._c, s = e[a]._d, r = e[a]._e, n = e[a]._f, i = e[a]._g, r.add("dragstart dragend dragleft dragright swipeleft swiperight"), d = !0); var l = this; if (this.opts[o] && "slide" == this.opts.effect && this.nodes.$slides.length > 1) { var f = 0, g = !1, u = !1; this.nodes.$wrpr.hammer().on(r.dragstart, function (e) { e.stopPropagation(), e.gesture && (e.gesture.preventDefault(), l.nodes.$sldr.addClass(t.noanimation)) }).on(r.dragleft + " " + r.dragright, function (e) { e.stopPropagation(), e.gesture && (e.gesture.preventDefault(), f = e.gesture.deltaX, g = e.gesture.direction, u = !1, ("left" == g && l.slides.index + l.slides.visible >= l.slides.total || "right" == g && 0 == l.slides.index) && (f /= 2.5), l.nodes.$sldr.css("margin-left", Math.round(f))) }).on(r.swipeleft + " " + r.swiperight, function (e) { e.stopPropagation(), e.gesture && (e.gesture.preventDefault(), u = !0) }).on(r.dragend, function (e) { if (e.stopPropagation(), e.gesture) { if (e.gesture.preventDefault(), l.nodes.$sldr.removeClass(t.noanimation).addClass(t.fastanimation), n.transitionend(l.nodes.$sldr, function () { l.nodes.$sldr.removeClass(t.fastanimation) }, l.conf.transitionDuration / 2), l.nodes.$sldr.css("margin-left", 0), "left" == g || "right" == g) { if (u) var s = l.slides.visible; else var i = l.nodes.$slides.first().width(), s = Math.floor((Math.abs(f) + i / 2) / i); s > 0 && l.nodes.$wrpr.trigger(r["left" == g ? "next" : "prev"], [s]) } g = !1 } }) } }, e[a].defaults[o] = e[a].support.touch, e[a].addons.push(o) } }(jQuery);
/*	
 *	jQuery Touch Optimized Sliders "R"Us
 *	Keys addon
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 */
!function (e) { var t, o, s, n, r, a = "tosrus", p = "keys", d = !1; e[a].prototype["_addon_" + p] = function () { d || (t = e[a]._c, o = e[a]._d, s = e[a]._e, n = e[a]._f, r = e[a]._g, s.add("keyup"), d = !0); var c = this, i = this.opts[p]; "boolean" == typeof i && i && (i = { prev: 37, next: 39, close: 27 }), e.isPlainObject(i) && (this.nodes.$slides.length < 2 && (i.prev = !1, i.next = !1), e(document).on(s.keyup, function (e) { if (c.vars.opened) { var t = !1; switch (e.keyCode) { case i.prev: t = s.prev; break; case i.next: t = s.next; break; case i.close: t = s.close } t && (e.preventDefault(), e.stopPropagation(), c.nodes.$wrpr.trigger(t)) } })) }, e[a].defaults[p] = !1, e[a].addons.push(p) }(jQuery);